openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: API for managing users.

paths:
  /api/users:
    get:
      summary: Get all users
      responses:
        "200":
          description: List of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /api/users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The user ID.
      responses:
        "200":
          description: User found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
    patch:
      summary: Update a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The user ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
    delete:
      summary: Delete a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The user ID.
      responses:
        "204":
          description: User deleted successfully
        "404":
          description: User not found
  /api/jobs:
    get:
      summary: Get all jobs
      responses:
        "200":
          description: List of all jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Job"
  /api/jobs/{id}:
    get:
      summary: Get a job by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The job ID.
      responses:
        "200":
          description: Job found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        "404":
          description: Job not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        age:
          type: integer
    UserInput:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        email:
          type: string
          example: johndoe@example.com
        age:
          type: integer
          example: 30

    Job:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          example: Cache Data
        status:
          type: string
          enum: [pending, in-progress, completed]
          example: pending